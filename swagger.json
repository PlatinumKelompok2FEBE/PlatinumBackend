{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation for SecondHand Backend Server",
    "version": "1.0.0",
    "title": "SecondHand API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "final-project-binar.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication Endpoints"
    },
    {
      "name": "Product",
      "description": "Product Data Endpoints"
    },
    {
      "name": "Category",
      "description": "Category Endpoints"
    },
    {
      "name": "User Biodata",
      "description": "Biodata Endpoints"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/category": {
      "get": {
        "tags": ["Category"],
        "summary": "Get Categories",
        "description": "Get All Categories",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "404": {
            "description": "Categories Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Categories not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login User",
        "description": "Login User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User Data",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Email and password is required"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register User",
        "description": "Register User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Test User"
                },
                "email": {
                  "type": "string",
                  "example": "testuser@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Email and password is required"
                }
              }
            }
          },
          "409": {
            "description": "Email already used",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "EMAIL_EXISTS"
                },
                "message": {
                  "type": "string",
                  "example": "Email already used"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "post": {
        "tags": ["Auth"],
        "summary": "Check User Token",
        "description": "Check User Token Validity",
        "security": [
          {
            "access_token": []
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Access"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh Token",
        "description": "Get User New Access Token and New Refresh Token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Refresh Token Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Refresh token is required"
                }
              }
            }
          },
          "401": {
            "description": "Invalid / Expired Token",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid or expired refresh token"
                }
              }
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Products",
        "description": "Get All Products",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "type": "string",
            "example": "Electronic",
            "description": "Filter products based on category"
          },
          {
            "in": "query",
            "name": "keyword",
            "type": "string",
            "example": "jam",
            "description": "Search products based on keyword"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "example": "10",
            "description": "Limit products result count for pagination"
          },
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "example": "2",
            "description": "Skip multiple products for pagination"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Create Product",
        "description": "Create New Product",
        "security": [
          {
            "access_token": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "required": true,
            "description": "Product Name"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "integer",
            "required": true,
            "description": "Product Price"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "required": true,
            "description": "Product Category"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true,
            "description": "Product Description"
          },
          {
            "in": "formData",
            "name": "pictures",
            "type": "file",
            "required": true,
            "description": "Product Pictures"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Product name, price, category, description, and picture is required"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get Product",
        "description": "Get Single Product by Product ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Update Product",
        "description": "Update Single Product by Product ID",
        "security": [
          {
            "access_token": []
          }
        ],
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "description": "Product Name"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "integer",
            "description": "Product Price"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "description": "Product Category"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "description": "Product Description"
          },
          {
            "in": "formData",
            "name": "pictures",
            "type": "file",
            "description": "Product Pictures"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "updatedProduct": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete Product",
        "description": "Delete Single Product by Product ID",
        "security": [
          {
            "access_token": []
          }
        ],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Product successfully deleted"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid Product ID is required"
                }
              }
            }
          },
          "404": {
            "description": "Product Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },

    "/biodata/{id}": {
      "put": {
        "tags": ["User Biodata"],
        "summary": "Update Biodata",
        "description": "Update User Biodata by User ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "example": 1,
            "required": true,
            "description": "User ID"
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string",
            "description": "User's Name"
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "description": "City"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "description": "Address"
          },
          {
            "in": "formData",
            "name": "phone_number",
            "type": "string",
            "description": "Phone Number"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "updatedProduct": {
                  "$ref": "#/definitions/UserBiodata"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "VALIDATION_FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Valid User ID is required"
                }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "user not found"
                }
              }
            }
          },
          "500": {
            "description": "System Error / Unexpected Error",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "SYSTEM_ERROR"
                },
                "message": {
                  "type": "string",
                  "example": "Something wrong with server"
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Category": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "example": ["Health", "Sport", "Automotive", "Electronic", "Property"]
            }
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@mail.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "UserBiodata": {
        "type": "object",
        "required": ["name", "city", "address", "phone_number"],
        "properties": {
          "email": {
            "type": "string",
            "example": "Muhammad Zaky Aonillah"
          },
          "password": {
            "type": "string",
            "example": "Jakarta"
          },
          "address": {
            "type": "string",
            "example": "Jalan Jendral Sudirman"
          },
          "phone_number": {
            "type": "string",
            "example": "082398327564"
          }
        }
      },
      "Product": {
        "type": "object",
        "required": ["name", "price", "category", "description", "pictures"],
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Jam Tangan"
          },
          "price": {
            "type": "integer",
            "example": "150000"
          },
          "category": {
            "type": "string",
            "example": "Electronic"
          },
          "description": {
            "type": "string",
            "example": "Jam Tangan Kualitas Bagus"
          },
          "seller_id": {
            "type": "integer",
            "example": "1"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "string",
              "example": ["jam_tangan_1.png", "jam_tangan_2.png"]
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ik1pY2hhZWwgRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.Xk3hf0UUoSky6RDWjMib6x6yf1aE9xpPeTO_Pcfpw4Q"
          }
        }
      }
    },
    "securityDefinitions": {
      "access_token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "bearerFormat": "JWT"
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }
}
